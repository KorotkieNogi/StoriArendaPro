@using StoriArendaPro.Models.ViewModels
@model StoriArendaPro.Models.ViewModels.UserProfileViewModel
@{
    ViewData["Title"] = "Мой профиль";
}

<div class="container py-4">
    <!-- Заголовок и приветствие -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <h1 class="h3 mb-0">Добро пожаловать, @Model.User.FullName!</h1>
                <span class="badge bg-primary fs-6">
                    @(Model.User.IsAdmin == true ? "Администратор" : "Пользователь")
                </span>
            </div>
            <p class="text-muted">Ваш email: @Model.User.Email | Телефон: @Model.User.PhoneNumber</p>
        </div>
    </div>

    <!-- Статус верификации -->
    @if (Model.PassportVerification != null)
    {
        <div class="row mb-4">
            <div class="col-12">
                <div class="alert @(Model.PassportVerification.Status == "одобрено" ? "alert-success" :
                      Model.PassportVerification.Status == "отклонено" ? "alert-danger" : "alert-warning")">
                    <h6 class="alert-heading">Статус верификации паспорта:</h6>
                    <p class="mb-0">@Model.PassportVerification.Status.ToUpper()</p>
                    @if (Model.PassportVerification.Status == "отклонено" && !string.IsNullOrEmpty(Model.PassportVerification.AdminNotes))
                    {
                        <hr>
                        <p class="mb-0"><strong>Причина:</strong> @Model.PassportVerification.AdminNotes</p>
                    }
                </div>
            </div>
        </div>
    }

    <!-- Вкладки -->
    <ul class="nav nav-tabs mb-4" id="profileTabs" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="orders-tab" data-bs-toggle="tab" data-bs-target="#orders" type="button" role="tab">
                <i class="fas fa-shopping-cart me-2"></i>Мои заказы
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="chats-tab" data-bs-toggle="tab" data-bs-target="#chats" type="button" role="tab">
                <i class="fas fa-comments me-2"></i>Чат с поддержкой
                @if (Model.SupportChats.Any(c => c.ChatMessages.Any(m => !m.IsRead && m.SenderId != Model.User.Id)))
                {
                    <span class="badge bg-danger ms-1">!</span>
                }
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="cart-tab" data-bs-toggle="tab" data-bs-target="#cart" type="button" role="tab">
                <i class="fas fa-shopping-basket me-2"></i>Корзина
                @if (Model.CartItems.Any())
                {
                    <span class="badge bg-primary ms-1">@Model.CartItems.Count</span>
                }
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="profile-tab" data-bs-toggle="tab" data-bs-target="#profile" type="button" role="tab">
                <i class="fas fa-user me-2"></i>Профиль
            </button>
        </li>
    </ul>

    <!-- Содержимое вкладок -->
    <div class="tab-content" id="profileTabsContent">
        <!-- Вкладка заказов -->
        <div class="tab-pane fade show active" id="orders" role="tabpanel">
            @if (Model.RentalOrders.Any())
            {
                <div class="row">
                    @foreach (var order in Model.RentalOrders.OrderByDescending(o => o.CreatedAt))
                    {
                        <div class="col-md-6 mb-3">
                            <div class="card h-100">
                                <div class="card-header d-flex justify-content-between align-items-center">
                                    <h6 class="mb-0">Заказ #@order.RentalOrderId</h6>
                                    <span class="badge @(order.Status == "completed" ? "bg-success" :
                                                       order.Status == "cancelled" ? "bg-danger" : "bg-warning")">
                                        @order.Status
                                    </span>
                                </div>
                                <div class="card-body">
                                    <p class="card-text"><strong>Сумма:</strong> @order.TotalAmount.ToString("C")</p>
                                    <p class="card-text">
                                        <strong>Период:</strong>
                                        @order.StartDate.ToString("dd.MM.yyyy") - @order.EndDate.ToString("dd.MM.yyyy")
                                    </p>
                                    <p class="card-text"><strong>Статус оплаты:</strong> @order.PaymentStatus</p>
                                    <p class="card-text">
                                        <small class="text-muted">
                                            Создан: @order.CreatedAt?.ToString("dd.MM.yyyy HH:mm")
                                        </small>
                                    </p>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-shopping-cart fa-3x text-muted mb-3"></i>
                    <h5>У вас пока нет заказов</h5>
                    <p class="text-muted">Начните арендовать оборудование, и ваши заказы появятся здесь</p>
                    <a href="/Catalog/Rent" class="btn btn-primary">Перейти к аренде</a>
                </div>
            }
        </div>

        <!-- Вкладка чатов -->
        <div class="tab-pane fade" id="chats" role="tabpanel">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h5>Мои чаты с поддержкой</h5>
                <button class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#newChatModal">
                    <i class="fas fa-plus me-1"></i>Новый чат
                </button>
            </div>

            @if (Model.SupportChats.Any())
            {
                <div class="list-group">
                    @foreach (var chat in Model.SupportChats.OrderByDescending(c => c.UpdatedAt))
                    {
                        <a href="#" class="list-group-item list-group-item-action">
                            <div class="d-flex w-100 justify-content-between">
                                <h6 class="mb-1">@chat.Subject</h6>
                                <small class="text-muted">@chat.UpdatedAt.ToString("dd.MM.yyyy HH:mm")</small>
                            </div>
                            <p class="mb-1">@(chat.ChatMessages.LastOrDefault()?.MessageText ?? "Нет сообщений")</p>
                            <div class="d-flex justify-content-between align-items-center">
                                <small class="text-muted">Статус: @chat.Status</small>
                                @if (chat.ChatMessages.Any(m => !m.IsRead && m.SenderId != Model.User.Id))
                                {
                                    <span class="badge bg-danger">Новые сообщения</span>
                                }
                            </div>
                        </a>
                    }
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-comments fa-3x text-muted mb-3"></i>
                    <h5>Чатов пока нет</h5>
                    <p class="text-muted">Создайте свой первый чат для общения с поддержкой</p>
                </div>
            }
        </div>

        <!-- Вкладка корзины -->
        <div class="tab-pane fade" id="cart" role="tabpanel">
            @if (Model.CartItems.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Товар</th>
                                <th>Тип аренды</th>
                                <th>Количество</th>
                                <th>Цена за ед.</th>
                                <th>Период</th>
                                <th>Сумма</th>
                                <th>Действия</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.CartItems)
                            {
                                <tr>
                                    <td>@item.RentalPrice?.Product?.Name</td>
                                    <td>@item.RentalType</td>
                                    <td>
                                        <form method="post" action="@Url.Action("UpdateCartQuantity", "Profile")" class="d-inline">
                                            <input type="hidden" name="cartId" value="@item.CartId">
                                            <div class="input-group input-group-sm" style="width: 100px;">
                                                <input type="number" name="quantity" value="@item.Quantity"
                                                       min="1" max="@item.RentalPrice?.Product?.Inventories.FirstOrDefault()?.QuantityForRent"
                                                       class="form-control">
                                                <button type="submit" class="btn btn-outline-primary">✓</button>
                                            </div>
                                        </form>
                                    </td>
                                    <td>@item.UnitPrice.ToString("N2") ₽</td>
                                    <td>@item.StartDate?.ToString("dd.MM.yyyy") - @item.EndDate?.ToString("dd.MM.yyyy")</td>
                                    <td>@item.Subtotal.ToString("N2") ₽</td>
                                    <td>
                                        <form method="post" action="@Url.Action("RemoveFromCart", "Profile")">
                                            <input type="hidden" name="cartId" value="@item.CartId">
                                            <button type="submit" class="btn btn-sm btn-outline-danger">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </form>
                                    </td>
                                </tr>
                            }
                        </tbody>
                        <tfoot>
                            <tr>
                                <td colspan="5"><strong>Итого:</strong></td>
                                <td><strong>@Model.CartItems.Sum(i => i.Subtotal).ToString("N2") ₽</strong></td>
                                <td>
                                    <a href="@Url.Action("Checkout", "Order")" class="btn btn-success">
                                        <i class="fas fa-credit-card me-1"></i>Оформить заказ
                                    </a>
                                </td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-shopping-basket fa-3x text-muted mb-3"></i>
                    <h5>Корзина пуста</h5>
                    <p class="text-muted">Добавьте товары в корзину, и они появятся здесь</p>
                    <a href="/Catalog/Rent" class="btn btn-primary">Перейти к аренде</a>
                </div>
            }
        </div>

        <!-- Вкладка профиля -->
        <div class="tab-pane fade" id="profile" role="tabpanel">
            <div class="row">
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header">
                            <h6 class="mb-0">Личная информация</h6>
                        </div>
                        <div class="card-body">
                            <p><strong>Имя:</strong> @Model.User.FullName</p>
                            <p><strong>Email:</strong> @Model.User.Email</p>
                            <p><strong>Телефон:</strong> @Model.User.PhoneNumber</p>
                            <p><strong>Дата регистрации:</strong> @Model.User.CreatedAt?.ToString("dd.MM.yyyy")</p>
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header">
                            <h6 class="mb-0">Паспортные данные</h6>
                        </div>
                        <div class="card-body">
                            @if (Model.PassportVerification != null)
                            {
                                <p>
                                    <strong>Статус:</strong>
                                    <span class="badge @(Model.PassportVerification.Status == "одобрено" ? "bg-success" :
                                        Model.PassportVerification.Status == "отклонено" ? "bg-danger" : "bg-warning")">
                                        @Model.PassportVerification.Status
                                    </span>
                                </p>
                                <p>
                                    <strong>Серия/Номер:</strong>
                                    @Model.PassportVerification.PassportSeria @Model.PassportVerification.PassportNumber
                                </p>
                                <p><strong>Прописка:</strong> @Model.PassportVerification.Propiska</p>
                                <p><strong>Место проживания:</strong> @Model.PassportVerification.PlaceLive</p>
                            }
                            else
                            {
                                <p class="text-muted">Паспортные данные не добавлены</p>
                                <button class="btn btn-primary btn-sm" data-bs-toggle="modal"
                                        data-bs-target="#passportModal" id="openPassportModal">
                                    Добавить паспортные данные
                                </button>

                                <!-- Добавьте модальное окно -->
                                @await Html.PartialAsync("_PassportModal", new PassportDataViewModel())
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Модальные окна -->
<div class="modal fade" id="newChatModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Новый чат с поддержкой</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="newChatForm">
                    <div class="mb-3">
                        <label class="form-label">Тема</label>
                        <input type="text" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Сообщение</label>
                        <textarea class="form-control" rows="4" required></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                <button type="button" class="btn btn-primary">Создать чат</button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        .nav-tabs .nav-link {
            border: none;
            padding: 1rem 1.5rem;
            font-weight: 500;
            color: #6c757d;
            transition: all 0.3s ease;
        }

            .nav-tabs .nav-link.active {
                color: #3498db;
                border-bottom: 3px solid #3498db;
                background: transparent;
            }

            .nav-tabs .nav-link:hover:not(.active) {
                color: #3498db;
                border-bottom: 3px solid rgba(52, 152, 219, 0.2);
            }

        .card {
            border: none;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
        }

            .card:hover {
                box-shadow: 0 4px 20px rgba(0,0,0,0.15);
                transform: translateY(-2px);
            }

        .list-group-item {
            border: 1px solid rgba(0,0,0,0.125);
            margin-bottom: 0.5rem;
            border-radius: 0.5rem;
            transition: all 0.3s ease;
        }

            .list-group-item:hover {
                background-color: #f8f9fa;
                border-color: #3498db;
            }
    </style>
}

@section Scripts {
    <script>
        // Инициализация вкладок
        const triggerTabList = document.querySelectorAll('#profileTabs button')
        triggerTabList.forEach(triggerEl => {
            new bootstrap.Tab(triggerEl)
        })

        // Функционал для глазков пароля
        function togglePassword(inputId, buttonId) {
            const passwordInput = document.getElementById(inputId);
            const toggleButton = document.getElementById(buttonId);

            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                toggleButton.innerHTML = '<i class="fas fa-eye-slash"></i>';
            } else {
                passwordInput.type = 'password';
                toggleButton.innerHTML = '<i class="fas fa-eye"></i>';
            }
        }

        // Обработчики для глазков
        document.getElementById('togglePasswordLogin')?.addEventListener('click', function() {
            togglePassword('passwordLogin', 'togglePasswordLogin');
        });

        document.getElementById('togglePasswordRegister')?.addEventListener('click', function() {
            togglePassword('passwordRegister', 'togglePasswordRegister');
        });

        document.getElementById('toggleConfirmPassword')?.addEventListener('click', function() {
            togglePassword('confirmPassword', 'toggleConfirmPassword');
        });
    </script>
}